openapi: 3.0.0
info:
  title: ./flowfile Mitmproxy2Swagger
  version: 1.0.0
servers:
- url: http://localhost:3000
  description: The default server
paths:
  /users:
    post:
      summary: POST users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                  name:
                    type: string
              example:
                id: 1
                email: test
                name: john
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
            example:
              email: test
              name: john
    get:
      summary: GET users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    email:
                      type: string
                    name:
                      type: string
              example:
              - id: 1
                email: test
                name: john
              - id: 2
                email: test2
                name: jill
  /expenses:
    post:
      summary: POST expenses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  item:
                    type: string
                  description:
                    type: object
                  cost:
                    type: number
                  userId:
                    type: number
                  createdAt:
                    type: string
                  updatedAt:
                    type: object
              example:
                id: 1
                item: milk
                description:
                cost: 1.99
                userId: 1
                createdAt: '2024-05-30T08:51:00.370Z'
                updatedAt:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: string
                userId:
                  type: string
                cost:
                  type: string
            example:
              item: milk
              userId: '1'
              cost: '1.99'
    get:
      summary: GET expenses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    item:
                      type: string
                    description:
                      type: object
                    cost:
                      type: number
                    userId:
                      type: number
                    createdAt:
                      type: string
                    updatedAt:
                      type: object
              example:
              - id: 1
                item: milk
                description:
                cost: 1.99
                userId: 1
                createdAt: '2024-05-30T08:51:00.370Z'
                updatedAt:
  /payments:
    post:
      summary: POST payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  senderId:
                    type: number
                  receiverId:
                    type: number
                  createdAt:
                    type: string
                  updatedAt:
                    type: object
                  amount:
                    type: number
              example:
                id: 1
                senderId: 1
                receiverId: 2
                createdAt: '2024-05-30T08:51:00.763Z'
                updatedAt:
                amount: 1.99
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                senderId:
                  type: string
                receiverId:
                  type: string
                amount:
                  type: string
            example:
              senderId: '1'
              receiverId: '2'
              amount: '1.99'
    get:
      summary: GET payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    senderId:
                      type: number
                    receiverId:
                      type: number
                    createdAt:
                      type: string
                    updatedAt:
                      type: object
                    amount:
                      type: number
              example:
              - id: 1
                senderId: 1
                receiverId: 2
                createdAt: '2024-05-30T08:51:00.763Z'
                updatedAt:
                amount: 1.99
  /expenses/{id}:
    get:
      summary: GET expenses by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                  name:
                    type: string
              example:
                id: 1
                email: test
                name: john
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      summary: PUT expenses by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  item:
                    type: string
                  description:
                    type: object
                  cost:
                    type: number
                  userId:
                    type: number
                  createdAt:
                    type: string
                  updatedAt:
                    type: object
              example:
                id: 1
                item: candy
                description:
                cost: 1.99
                userId: 1
                createdAt: '2024-05-30T08:51:00.370Z'
                updatedAt:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: string
                userId:
                  type: string
                cost:
                  type: string
            example:
              item: candy
              userId: '1'
              cost: '1.99'
    delete:
      summary: DELETE expenses by id
      responses:
        '200':
          description: OK
          content: {}
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /payments/{id}:
    get:
      summary: GET payments by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  senderId:
                    type: number
                  receiverId:
                    type: number
                  createdAt:
                    type: string
                  updatedAt:
                    type: object
                  amount:
                    type: number
              example:
                id: 1
                senderId: 1
                receiverId: 2
                createdAt: '2024-05-30T08:51:00.763Z'
                updatedAt:
                amount: 1.99
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    delete:
      summary: DELETE payments by id
      responses:
        '200':
          description: OK
          content: {}
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /users/{id}:
    get:
      summary: GET users by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                  name:
                    type: string
              example:
                id: 1
                email: test
                name: john
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      summary: PUT users by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                  name:
                    type: string
              example:
                id: 1
                email: newemail
                name: john
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
            example:
              email: newemail
              name: john
    delete:
      summary: DELETE users by id
      responses:
        '200':
          description: OK
          content: {}
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
x-path-templates:
# Remove the  prefix to generate an endpoint with its URL
# Lines that are closer to the top take precedence, the matching is greedy
- /expenses/1
- /payments/1
- /users/1
